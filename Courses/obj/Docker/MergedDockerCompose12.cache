name: dockercompose4890134073306514288
services:
  cart.api:
    build:
      context: C:\workspace\StudyAT\StudyAT_BE_Courses\Courses
      dockerfile: Services/Cart/Cart.API/Dockerfile
    container_name: cart.api
    depends_on:
      cartdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: cartdb:6379
    image: cartapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "9094"
        protocol: tcp
  cartdb:
    container_name: cartdb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\workspace\StudyAT\StudyAT_BE_Courses\Courses
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:DefaultString: Server=host.docker.internal;Port=5432; User Id=admin; Password=Monkeydluffy@123; Database=Catalog
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "9093"
        protocol: tcp
  catalogdb:
    container_name: catalogdb
    environment:
      POSTGRES_DB: Catalog
      POSTGRES_PASSWORD: Monkeydluffy@123
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose4890134073306514288_default
volumes:
  postgres_data:
    name: dockercompose4890134073306514288_postgres_data