name: dockercompose4890134073306514288
services:
  catalog.api:
    build:
      context: C:\workspace\StudyAT\StudyAT_BE_Courses\Courses
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
      target: base
    container_name: catalog.api
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DefaultString: Server=host.docker.internal;Port=5432; User Id=admin; Password=Monkeydluffy@123; Database=Catalog
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: catalogapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net7.0/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "9093"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\workspace\StudyAT\StudyAT_BE_Courses\Courses\Services\Catalog\Catalog.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ASUS\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\workspace\StudyAT\StudyAT_BE_Courses\Courses
        target: /src
        bind:
          create_host_path: true
  catalogdb:
    container_name: catalogdb
    environment:
      POSTGRES_DB: Catalog
      POSTGRES_PASSWORD: Monkeydluffy@123
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose4890134073306514288_default
volumes:
  postgres_data:
    name: dockercompose4890134073306514288_postgres_data